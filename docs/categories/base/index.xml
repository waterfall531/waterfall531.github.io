<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Base on Randy&#39;s Blog</title>
    <link>https://waterfall531.github.io/categories/base/</link>
    <description>Recent content in Base on Randy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 28 Oct 2021 11:22:47 +0800</lastBuildDate><atom:link href="https://waterfall531.github.io/categories/base/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rsync</title>
      <link>https://waterfall531.github.io/posts/rsync/</link>
      <pubDate>Thu, 28 Oct 2021 11:22:47 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/rsync/</guid>
      <description>Rsync 增量同步 rsync -avz --delete --progress &amp;quot;${SRC}&amp;quot; &amp;quot;/backup/$(hostname)&amp;quot; &amp;ndash;progress 會顯示有進行同步的檔案 &amp;ndash;delete 會刪除來源也刪除的檔案 -a 封裝備份模式 遞迴備份所有子目錄下的目錄與檔案，保留連結檔、檔案的擁有者、群組、權限以及時間戳記 -rlptgoD -v verbose 模式，輸出比較詳細的訊息 -z 啟用壓縮 -r 遞迴 -t preserve modification times 保留修改時間 -o preserve owner -p preserve permissions -g preserve group -l copy symlinks as symlinks -D 是&amp;quot;&amp;ndash;device &amp;ndash;specials&amp;quot;選項的組合，即也拷貝裝置檔案和特殊檔案。 </description>
    </item>
    
    <item>
      <title>Ha failover</title>
      <link>https://waterfall531.github.io/posts/ha-failover/</link>
      <pubDate>Mon, 25 Oct 2021 15:12:19 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/ha-failover/</guid>
      <description>HAProxy HA(High Availability) Load Balance 自動加密 聽 tcp socket，連 server，然後把 socket 接在一起讓雙向流通 可做 Http reverse-proxy (Http gateway)，自己作為代理 server，把接受到的 connection 傳到後端的 server。 SSL 終端，可支援 client-side 與 server-side 的 ssl/tls 當 tcp/http normalizer 更改 http 的 request 與 response 當 switch，決定 request 後送的目標 做 load balancer，為後端 server 做負載均衡 調節流量，設定 rate limit，或是根據內容調整流量 ref:link
failover cluster 主次明顯 一個掛掉另一個馬上接手 docker swarm Load Balance 可斷線後重連 可復原 可以設定主次 </description>
    </item>
    
    <item>
      <title>Linux Command</title>
      <link>https://waterfall531.github.io/posts/linux-command/</link>
      <pubDate>Wed, 29 Sep 2021 14:19:49 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/linux-command/</guid>
      <description>check top htop df -h free -h pm2 start index.js --node-args=&amp;quot;--max-old-space-size=1024&amp;quot; </description>
    </item>
    
    <item>
      <title>Get Nth Highest Salary</title>
      <link>https://waterfall531.github.io/posts/get-nth-highest-salary/</link>
      <pubDate>Thu, 23 Sep 2021 17:50:18 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/get-nth-highest-salary/</guid>
      <description> Write an SQL query to report the nth highest salary from the Employee table. If there is no nth highest salary, the query should report null.
The query result format is in the following example.
CREATE FUNCTION getNthHighestSalary ( N INT ) RETURNS INT BEGIN DECLARE var INT; SET var = N - 1; RETURN ( SELECT ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET var ) AS SecondHighestSalary ); END; SELECT getNthHighestSalary ( 2 ); 由前一題改變而來 OFFSET 改 var </description>
    </item>
    
    <item>
      <title>Node Axios</title>
      <link>https://waterfall531.github.io/posts/node-axios/</link>
      <pubDate>Thu, 23 Sep 2021 11:45:05 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/node-axios/</guid>
      <description>Axios node 那件是異步 所以要用Async / Await / Promise 處理 Async function / Await 深度介紹 axios async function 內加return await </description>
    </item>
    
    <item>
      <title>Second Highest Salary</title>
      <link>https://waterfall531.github.io/posts/second-highest-salary/</link>
      <pubDate>Thu, 23 Sep 2021 11:45:05 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/second-highest-salary/</guid>
      <description> Write an SQL query to report the second highest salary from the Employee table. If there is no second highest salary, the query should report null.
The query result format is in the following example.
錯誤解法 SELECT SecondHighestSalary FROM ( SELECT rank() over ( ORDER BY salary DESC ) AS rr, `salary` AS SecondHighestSalary FROM ( SELECT DISTINCT salary FROM Employee ) a UNION ALL SELECT NULL , NULL FROM `Employee` ) a LIMIT 1, 1 先去除重複排序 排rank 加null SELECT SecondHighestSalary FROM ( SELECT `salary` AS SecondHighestSalary FROM ( SELECT DISTINCT salary FROM Employee ) a UNION ALL SELECT NULL FROM `Employee` ) a LIMIT 1, 1 去掉rank 後排序更快 SELECT IFNULL ( (SELECT MAX(Salary) FROM Employee WHERE Salary &amp;lt; (SELECT MAX(Salary) FROM Employee)), NULL ) as SecondHighestSalary; 最佳解 選擇max 但 排除掉max (選擇去掉跑最快的最快那一個) SELECT ( SELECT DISTINCT Salary FROM Employee ORDER BY Salary DESC LIMIT 1 OFFSET 1 ) AS SecondHighestSalary distinct後 排序 後limit 1 offset 1 在包成select </description>
    </item>
    
  </channel>
</rss>
