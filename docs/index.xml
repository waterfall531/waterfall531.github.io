<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Randy&#39;s Blog</title>
    <link>https://waterfall531.github.io/</link>
    <description>Recent content on Randy&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 08 May 2021 12:03:59 +0800</lastBuildDate>
    
	<atom:link href="https://waterfall531.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Interview#0508</title>
      <link>https://waterfall531.github.io/posts/interview#0508/</link>
      <pubDate>Sat, 08 May 2021 12:03:59 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/interview#0508/</guid>
      <description>問題 1.[static](https://jaceju.net/php-static/) 2.Mongo vs Mysql 3.設計模式(單例)  Static static 會把變數存起來
function getCount() { static $count = 0; $count ++; return $count; } for ($i = 0; $i &amp;lt; 10; $i ++) { echo getCount(), &amp;#34;\n&amp;#34;; } /* output: 1 2 3 4 5 6 7 8 9 10 */ ex
function fibV2($n) { static $result = array(); if (!isset($result[$n])) { if ($n &amp;lt;= 2) { $result[$n] = 1; } else { $result[$n] = fibV2($n - 2) + fibV2($n - 1); } } return $result[$n]; } $result 會存所以不會遞迴下去太多次 O(n)?</description>
    </item>
    
    <item>
      <title>Selenium / ChromeDrive / PHP base / Html CSS selector</title>
      <link>https://waterfall531.github.io/posts/selenium/</link>
      <pubDate>Fri, 07 May 2021 00:49:47 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/selenium/</guid>
      <description>Selenium   有多版本
 Python NodeJs Java Php    Selenium 需要 Browser 支援
 Chrome Firefox    而中間需要 Driver 控制
 Chrome  Linux Mac Mac_M1 Windows   Firefox  Geckodriver      而執行端需要 Chrome / Firefox
  Linux
wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm sudo yum install ./google-chrome-stable_current_*.rpm   Mac
 我相信你有裝Chrome      執行Selenium 前必須啟動 Driver
 Mac/Linux  .</description>
    </item>
    
    <item>
      <title>f776: 方形數字</title>
      <link>https://waterfall531.github.io/posts/f776/</link>
      <pubDate>Sun, 02 May 2021 23:30:20 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/f776/</guid>
      <description>原點在左下角。
  x 方向左而右由 1 ~ N, y 方向下而上由 1 ~ N 的一個方形數字。
  請算出每組 （x1, y1）to（x2, y2）的數字合計。
           3 3 3   2 2 3   1 2 3    v0  一開始就想肯定有公式解
  朝著F([x1,y1],[x2,y2])
  去思考
  後來發現有點難
 v1  後來想到F(x,y)去return當下格子數字 但這樣O()會超級大 exF(7,5) =&amp;gt; F(3,2) O(20)
 v2  後來的想法是F(n) 去算 NxN內的數字和</description>
    </item>
    
    <item>
      <title>1315_Sum of Nodes with Even-Valued Grandparent</title>
      <link>https://waterfall531.github.io/posts/leetcode-1315/</link>
      <pubDate>Wed, 06 Jan 2021 17:59:39 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1315/</guid>
      <description>Given a binary tree, return the sum of values of nodes with even-valued grandparent. (A grandparent of a node is the parent of its parent, if it exists.)
If there are no nodes with an even-valued grandparent, return 0.
 翻譯 祖節點是偶數 則當前節點++
class TreeNode { public $val = null; public $left = null; public $right = null; function __construct($val = 0, $left = null, $right = null) { $this-&amp;gt;val = $val; $this-&amp;gt;left = $left; $this-&amp;gt;right = $right; } } class Solution { /** * @param TreeNode $root * @return Integer */ public function sumEvenGrandparent($root) { $sum = 0; if (!</description>
    </item>
    
    <item>
      <title>1689_Partitioning Into Minimum Number Of Deci-Binary Numbers</title>
      <link>https://waterfall531.github.io/posts/leetcode-1689/</link>
      <pubDate>Wed, 06 Jan 2021 11:05:03 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1689/</guid>
      <description>Question  A decimal number is called deci-binary if each of its digits is either 0 or 1 without any leading zeros. For example, 101 and 1100 are deci-binary, while 112 and 3001 are not.
Given a string n that represents a positive decimal integer, return the minimum number of positive deci-binary numbers needed so that they sum up to n.
 白話就是  用最少的次數 加到 題目的 n
加上的數字 不能有2~9</description>
    </item>
    
    <item>
      <title>interview_1217</title>
      <link>https://waterfall531.github.io/posts/interview1217/</link>
      <pubDate>Thu, 17 Dec 2020 14:50:21 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/interview1217/</guid>
      <description>面試 寫出純api  不需要介面 只需要收傳參
  userLogin 帳號/手機號 + 密碼 &amp;gt; token userRegister 帳號/手機號 + 密碼 + email &amp;gt; token userMessage token + 訊息 userReply token + 訊息ID + 訊息  演算法  一維陣列 n元素 轉n維陣列 並設置值
 class Solution { function toArray($list, $value = &amp;#39;value&amp;#39;) { $list = array_reverse($list); return $this-&amp;gt;add($list, $value); } function add(&amp;amp;$list, $setValue = &amp;#39;value&amp;#39;) { if (empty($list)) { return $setValue; } $value = array_pop($list); $output[$value] = $this-&amp;gt;add($list, $setValue); return $output; } } 後記  當下怎樣想怎樣怪</description>
    </item>
    
    <item>
      <title>Leetcode 1673 Widest Vertical Area Between Two Points Containing No Points</title>
      <link>https://waterfall531.github.io/posts/leetcode-1673/</link>
      <pubDate>Mon, 14 Dec 2020 17:28:44 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1673/</guid>
      <description>題目  Given n points on a 2D plane where points[i] = [xi, yi], Return the widest vertical area between two points such that no points are inside the area.
A vertical area is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The widest vertical area is the one with the maximum width.
Note that points on the edge of a vertical area are not considered included in the area.</description>
    </item>
    
    <item>
      <title>Leetcode 1282 Group the People Given the Group Size They Belong To</title>
      <link>https://waterfall531.github.io/posts/leetcode-1282/</link>
      <pubDate>Fri, 11 Dec 2020 18:18:19 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1282/</guid>
      <description>There are n people that are split into some unknown number of groups. Each person is labeled with a unique ID from 0 to n - 1.
You are given an integer array groupSizes, where groupSizes[i] is the size of the group that person i is in. For example, if groupSizes[1] = 3, then person 1 must be in a group of size 3.
Return a list of groups such that each person i is in a group of size groupSizes[i].</description>
    </item>
    
    <item>
      <title>Leetcode 1476. Subrectangle Queries</title>
      <link>https://waterfall531.github.io/posts/leetcode-1476/</link>
      <pubDate>Thu, 10 Dec 2020 16:58:52 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1476/</guid>
      <description>Implement the class SubrectangleQueries which receives a rows x cols rectangle as a matrix of integers in the constructor and supports two methods:
   updateSubrectangle(int row1, int col1, int row2, int col2, int newValue)
 Updates all values with newValue in the subrectangle whose upper left coordinate is (row1,col1) and bottom right coordinate is (row2,col2).    getValue(int row, int col)
 Returns the current value of the coordinate (row,col) from the rectangle.</description>
    </item>
    
    <item>
      <title>Leetcode 1603</title>
      <link>https://waterfall531.github.io/posts/leetcode-1603/</link>
      <pubDate>Mon, 07 Dec 2020 17:35:25 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1603/</guid>
      <description>Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of slots for each size.
 Implement the ParkingSystem class:
 ParkingSystem(int big, int medium, int small) Initializes object of the ParkingSystem class. The number of slots for each parking space are given as part of the constructor. bool addCar(int carType) Checks whether there is a parking space of carType for the car that wants to get into the parking lot.</description>
    </item>
    
    <item>
      <title>Leetcode 1672.Richest Customer Wealth</title>
      <link>https://waterfall531.github.io/posts/leetcode-1672/</link>
      <pubDate>Mon, 07 Dec 2020 17:06:52 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1672/</guid>
      <description>You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the i​​​​​​​​​​​th​​​​ customer has in the j​​​​​​​​​​​th​​​​ bank. Return the wealth that the richest customer has.
A customer&amp;rsquo;s wealth is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum wealth.
 v0 class Solution { /** * @param Integer[][] $accounts * @return Integer */ function maximumWealth($accounts) { $max = 0; foreach ($accounts as $list) { $tmpSum = array_sum($list); $max = $max &amp;gt; $tmpSum ?</description>
    </item>
    
    <item>
      <title>Leetcode 1221</title>
      <link>https://waterfall531.github.io/posts/leetcode-1221/</link>
      <pubDate>Fri, 11 Sep 2020 17:13:49 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1221/</guid>
      <description> Balanced strings are those who have equal quantity of &amp;lsquo;L&amp;rsquo; and &amp;lsquo;R&amp;rsquo; characters.
Given a balanced string s split it in the maximum amount of balanced strings.
Return the maximum amount of splitted balanced strings.
 Input: s = &amp;ldquo;RLRRLLRLRL&amp;rdquo;
Output: 4
Explanation: s can be split into &amp;ldquo;RL&amp;rdquo;, &amp;ldquo;RRLL&amp;rdquo;, &amp;ldquo;RL&amp;rdquo;, &amp;ldquo;RL&amp;rdquo;,each substring contains same number of &amp;lsquo;L&amp;rsquo; and &amp;lsquo;R&amp;rsquo;.
v0 class Solution { /** * @param String $s * @return Integer */ function balancedStringSplit($s) { $start = &amp;#39;&amp;#39;; $tmp = 0; $tmpCount = 0; for ($i = 0, $iMax = strlen($s); $i &amp;lt; $iMax; $i++) { if ($start === &amp;#39;&amp;#39;) { $start = $s[$i]; $tmpCount++; }else{ if ($s[$i] === $start) { $tmpCount++; } else { $tmpCount--; } } if ($tmpCount === 0) { $tmp++; $start = &amp;#39;&amp;#39;; } } return $tmp; } } </description>
    </item>
    
    <item>
      <title>Leetcode 1365</title>
      <link>https://waterfall531.github.io/posts/leetcode-1365/</link>
      <pubDate>Fri, 11 Sep 2020 17:13:49 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1365/</guid>
      <description>Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j&amp;rsquo;s such that j != i and nums[j] &amp;lt; nums[i].
Return the answer in an array.
 v0 class Solution { /** * @param Integer[] $nums * @return Integer[] */ function smallerNumbersThanCurrent($nums) { $sortArray = $nums; sort($sortArray); $resultC = []; foreach ($sortArray as $i =&amp;gt; $iValue) { $resultC[$iValue] = !</description>
    </item>
    
    <item>
      <title>Leetcode 1614</title>
      <link>https://waterfall531.github.io/posts/leetcode-1614/</link>
      <pubDate>Fri, 11 Sep 2020 17:13:49 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1614/</guid>
      <description>A string is a valid parentheses string (denoted VPS) if it meets one of the following:
  It is an empty string &amp;ldquo;&amp;rdquo;, or a single character not equal to &amp;ldquo;(&amp;rdquo; or &amp;ldquo;)&amp;rdquo;, It can be written as AB (A concatenated with B), where A and B are VPS&amp;rsquo;s, or It can be written as (A), where A is a VPS.   We can similarly define the nesting depth depth(S) of any VPS S as follows:</description>
    </item>
    
    <item>
      <title>Leetcode 1389</title>
      <link>https://waterfall531.github.io/posts/leetcode-1389/</link>
      <pubDate>Fri, 11 Sep 2020 16:51:59 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1389/</guid>
      <description>Given two arrays of integers nums and index. Your task is to create target array under the following rules:
  Initially target array is empty. From left to right read nums[i] and index[i], insert at index index[i] the value nums[i] in target array. Repeat the previous step until there are no elements to read in nums and index.   Return the target array.
  It is guaranteed that the insertion operations will be valid.</description>
    </item>
    
    <item>
      <title>Leetcode 1486. XOR Operation in an Array</title>
      <link>https://waterfall531.github.io/posts/leetcode-1486/</link>
      <pubDate>Mon, 07 Sep 2020 11:55:57 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1486/</guid>
      <description>Given an integer n and an integer start. Define an array nums where nums[i] = start + 2*i (0-indexed) and n == nums.length. Return the bitwise XOR of all elements of nums.
 v0 $tmpNum算出當下的n
再算$tmp
^ 是運算 xor
xor 是邏輯 xor
class Solution { /** * @param Integer $n * @param Integer $start * @return Integer */ function xorOperation($n, $start) { $tmp = $start; for($i = 1 ; $i &amp;lt; $n ; $i++){ $tmpNum = $start + 2 * $i; $tmp = $tmp ^ $tmpNum; } return $tmp; } } #v1</description>
    </item>
    
    <item>
      <title>Leetcode 1431</title>
      <link>https://waterfall531.github.io/posts/leetcode-1431.kids_with_the_greatest_number_of_candies/</link>
      <pubDate>Thu, 03 Sep 2020 17:30:44 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1431.kids_with_the_greatest_number_of_candies/</guid>
      <description>Given the array candies and the integer extraCandies, where candies[i] represents the number of candies that the ith kid has.
  For each kid check if there is a way to distribute extraCandies among the kids such that he or she can have the greatest number of candies among them. Notice that multiple kids can have the greatest number of candies.
 ##v0 test 1000 times with 0.28ms</description>
    </item>
    
    <item>
      <title>Leetcode 1528</title>
      <link>https://waterfall531.github.io/posts/leetcode-1528._shuffle_string/</link>
      <pubDate>Thu, 03 Sep 2020 17:00:16 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1528._shuffle_string/</guid>
      <description> Given a string s and an integer array indices of the same length.
  The string s will be shuffled such that the character at the ith position moves to indices[i] in the shuffled string.
  Return the shuffled string.
 v1
class Solution { function restoreString($s, $indices) { $list = []; foreach ($indices as $index=&amp;gt;$item){ $list[$item] = $s[$index]; } ksort($list); return join(&amp;#39;&amp;#39;,$list); } } v2
class Solution { /** * @param String $s * @param Integer[] $indices * @return array */ function restoreString($s, $indices) { $list = &amp;#39;&amp;#39;; foreach ($indices as $index=&amp;gt;$item){ $list[$item] = $s[$index]; } return $list; } } </description>
    </item>
    
    <item>
      <title>Leetcode 1512. Number of Good Pairs</title>
      <link>https://waterfall531.github.io/posts/leetcode-1512.number_of_good_pairs/</link>
      <pubDate>Thu, 03 Sep 2020 16:56:51 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1512.number_of_good_pairs/</guid>
      <description> Given an array of integers nums.
  A pair (i,j) is called good if nums[i] == nums[j] and i &amp;lt; j.
  Return the number of good pairs.
 class Solution { /** * @param Integer[] $nums * @return Integer */ function numIdenticalPairs($nums) { $ans = 0; for($i = 0; $i &amp;lt; count($nums) - 1 ; $i++){ for($j = $i+1 ; $j &amp;lt; count($nums);$j++){ if ($nums[$i] === $nums[$j]){ $ans++; } } } return $ans; } } </description>
    </item>
    
    <item>
      <title>Leetcode 1470 Shuffle_the_Array</title>
      <link>https://waterfall531.github.io/posts/leetcode-1470-shuffle_the_array/</link>
      <pubDate>Tue, 01 Sep 2020 16:43:16 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1470-shuffle_the_array/</guid>
      <description>#1470. Shuffle the Array
 Given the array nums consisting of 2n elements in the form [x1,x2,&amp;hellip;,xn,y1,y2,&amp;hellip;,yn].
  Return the array in the form [x1,y1,x2,y2,&amp;hellip;,xn,yn].
 首先
 1 &amp;lt;= n &amp;lt;= 500
nums.length == 2n
1 &amp;lt;= nums[i] &amp;lt;= 10^3
 2n 一定等於長度
也就是說
可以藉由循序 先插入 &amp;lt; n 的 再處理 &amp;gt;= n的
class Solution { /** * @param Integer[] $nums * @param Integer $n * @return Integer[] */ function shuffle($nums, $n) { $list = []; foreach($nums as $index =&amp;gt; $num){ if ($index &amp;lt; $n){ $newIndex = $index * 2; }else{ $newIndex = ($index - $n) * 2 + 1; } $list[$newIndex] = $num; } ksort($list); return $list; } } 可這樣的做法問題在於 還要處理 array sort 又多花一點時間</description>
    </item>
    
    <item>
      <title>Leetcode 1480</title>
      <link>https://waterfall531.github.io/posts/leetcode-1480/</link>
      <pubDate>Tue, 01 Sep 2020 16:36:33 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/leetcode-1480/</guid>
      <description>#1480. Running Sum of 1d Array
 Given an array nums.
  We define a running sum of an array as runningSum[i] = sum(nums[0]…nums[i]).
  Return the running sum of nums.
 這是道簡單的題目 第一個想法是 foreach 就好 但要略過 index = 0 或是去判斷
判斷的所需秒數 12ms
` class Solution {
/** * @param Integer[] $nums * @return Integer[] */ function runningSum($nums) { $ans = []; foreach($nums as $index =&amp;gt; $num){ if($index === 0){ $ans[$index] = $num; }else{ $ans[$index] = $ans[$index - 1] + $num; } } return $ans; }  } `</description>
    </item>
    
    <item>
      <title>Mysql Alter Column</title>
      <link>https://waterfall531.github.io/posts/mysql-alter-column/</link>
      <pubDate>Tue, 18 Aug 2020 17:16:02 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/mysql-alter-column/</guid>
      <description>前情提要 1400w Rows的表 不停機情況下增加欄位
  mysql 5.6(含) 使用innoDb 可以線上改欄位格式 不鎖表
  若為 5.6以下(不含) 可考慮使用 pt-online-schema-change
  或考慮土法煉鋼
 複製表結構後產新表 移除key 複製資料 加key 停機 同步第二次 rename &amp;amp;&amp;amp; del oldTable    </description>
    </item>
    
    <item>
      <title>GitHub &#43; Hugo</title>
      <link>https://waterfall531.github.io/posts/hugo&#43;guthub/</link>
      <pubDate>Tue, 18 Aug 2020 16:31:11 +0800</pubDate>
      
      <guid>https://waterfall531.github.io/posts/hugo&#43;guthub/</guid>
      <description>setting github page change to /docs
add publishdir = &amp;lsquo;docs&amp;rsquo; to config.toml
then hugo -d output to docs and it can be push to git and also auto commit github page</description>
    </item>
    
  </channel>
</rss>